//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.06.05 at 02:05:01 PM FET 
//


package org.netbeans.xml.schema.medicineschema;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for PackageType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="PackageType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="блистер"/>
 *     &lt;enumeration value="ампула"/>
 *     &lt;enumeration value="флакон"/>
 *     &lt;enumeration value="банка"/>
 *     &lt;enumeration value="бутылка"/>
 *     &lt;enumeration value="пакетик"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "PackageType")
@XmlEnum
public enum PackageType {

    @XmlEnumValue("\u0431\u043b\u0438\u0441\u0442\u0435\u0440")
    блистер("\u0431\u043b\u0438\u0441\u0442\u0435\u0440"),
    @XmlEnumValue("\u0430\u043c\u043f\u0443\u043b\u0430")
    ампула("\u0430\u043c\u043f\u0443\u043b\u0430"),
    @XmlEnumValue("\u0444\u043b\u0430\u043a\u043e\u043d")
    флакон("\u0444\u043b\u0430\u043a\u043e\u043d"),
    @XmlEnumValue("\u0431\u0430\u043d\u043a\u0430")
    банка("\u0431\u0430\u043d\u043a\u0430"),
    @XmlEnumValue("\u0431\u0443\u0442\u044b\u043b\u043a\u0430")
    бутылка("\u0431\u0443\u0442\u044b\u043b\u043a\u0430"),
    @XmlEnumValue("\u043f\u0430\u043a\u0435\u0442\u0438\u043a")
    пакетик("\u043f\u0430\u043a\u0435\u0442\u0438\u043a");
    private final String value;

    PackageType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static PackageType fromValue(String v) {
        for (PackageType c: PackageType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
