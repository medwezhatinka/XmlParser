//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.06.05 at 02:05:01 PM FET 
//


package by.epam.lab.model;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for MedVersion.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="MedVersion">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="таблетки"/>
 *     &lt;enumeration value="капсулы"/>
 *     &lt;enumeration value="порошок"/>
 *     &lt;enumeration value="капли"/>
 *     &lt;enumeration value="драже"/>
 *     &lt;enumeration value="ампулы"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "MedVersion")
@XmlEnum
public enum MedVersion {

    @XmlEnumValue("\u0442\u0430\u0431\u043b\u0435\u0442\u043a\u0438")
    таблетки("\u0442\u0430\u0431\u043b\u0435\u0442\u043a\u0438"),
    @XmlEnumValue("\u043a\u0430\u043f\u0441\u0443\u043b\u044b")
    капсулы("\u043a\u0430\u043f\u0441\u0443\u043b\u044b"),
    @XmlEnumValue("\u043f\u043e\u0440\u043e\u0448\u043e\u043a")
    порошок("\u043f\u043e\u0440\u043e\u0448\u043e\u043a"),
    @XmlEnumValue("\u043a\u0430\u043f\u043b\u0438")
    капли("\u043a\u0430\u043f\u043b\u0438"),
    @XmlEnumValue("\u0434\u0440\u0430\u0436\u0435")
    драже("\u0434\u0440\u0430\u0436\u0435"),
    @XmlEnumValue("\u0430\u043c\u043f\u0443\u043b\u044b")
    ампулы("\u0430\u043c\u043f\u0443\u043b\u044b");
    private final String value;

    MedVersion(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static MedVersion fromValue(String v) {
        for (MedVersion c: MedVersion.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
